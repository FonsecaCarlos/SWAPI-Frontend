{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/main/index.js","service/api.js","components/page/people/index.js","components/page/film/index.js","components/page/planet/index.js","components/page/species/index.js","components/page/startships/index.js","components/page/vehicles/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["header","props","react_default","a","createElement","id","className","react_router_dom","to","title","subtitle","footer","Main","Component","api","axios","create","baseURL","People","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","redirectView","elem","window","scroll","top","document","querySelector","behavior","findAplication","asyncToGenerator","regenerator_default","mark","_callee","resp","list","wrap","_context","prev","next","get","sent","data","setState","stop","navegation","_ref2","_callee2","url","_context2","concat","_x","apply","arguments","state","from","undefined","results","_this2","map","item","key","name","height","hair_color","skin_color","eye_color","birth_year","gender","previous","onClick","Film","sort","b","episode_id","release_date","producer","director","Planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","Species","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","Starships","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","Vehicles","vehicle_class","routes","react_router","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f96f10e1.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './style.css'\n\nexport default (props) => {\n    return (\n        <header id='topo' className='header-wrapper'>\n            <Link to='/SWAPI-Frontend' className='header-wrapper'>\n                <h1>{props.title}</h1>\n                <p>{props.subtitle}</p>\n            </Link>\n        </header>\n    )\n}\n","import React from 'react'\n\nimport './style.css'\n\nexport default () => {\n    return (\n        <footer className='footer-wrapper'>\n            <p>DevCH - Todos os direitos reservados</p>\n        </footer>\n    )\n}","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './style.css'\n\nexport default class Main extends Component {\n    render() {\n\n        return (\n            <section className='main-wrapper'>\n                <Link className='card-main' to='/SWAPI-Frontend/filmes'> <strong>Filmes</strong></Link>\n                <Link className='card-main' to='/SWAPI-Frontend/personagens'> <strong>Personagens</strong></Link>\n                <Link className='card-main' to='/SWAPI-Frontend/planetas'> <strong>Planetas</strong></Link>\n                <Link className='card-main' to='/SWAPI-Frontend/especies'> <strong>Espécies</strong></Link>\n                <Link className='card-main' to='/SWAPI-Frontend/naves'> <strong>Naves Estelares</strong></Link>\n                <Link className='card-main' to='/SWAPI-Frontend/veiculos'> <strong>Veículos</strong></Link>\n            </section>    \n        )\n    }\n}\n","import axios from 'axios'\n\nconst baseURL = 'https://swapi.co/api/'\n\nconst api = axios.create({ baseURL })\n\nexport default api","import React, { Component } from 'react'\n\nimport api from '../../../service/api'\n\nimport '../style.css'\n\nclass People extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            from: undefined,\n            list: {\n                results: []\n            }\n        }\n    }\n\n    //codigo da internet\n    redirectView = (elem) => {\n        window.scroll({\n            top: document.querySelector(elem),\n            behavior: 'auto'// smooth - tem um animação\n        });\n    }\n\n    componentDidMount() {\n        this.findAplication()\n    }\n\n    findAplication = async () => {\n        const resp = await api.get('people/')\n        const list = resp.data\n        this.setState({ list })\n    }\n\n    navegation = async (url) => {\n        const resp = await api.get(`${url}`)\n        const list = resp.data\n        this.setState({ list })\n        this.redirectView('topo')\n    }\n\n    render() {\n        const { list } = this.state\n        \n        return (\n            <div>\n                <h3 className='sub-title'>Personagens</h3>\n                <div className='page-wrapper'>\n                    {list.results.map((item) => (\n                        <div key={item.url} className='page-wrapper-box'>\n                            <p><strong>Nome: </strong>{item.name}</p>\n                            <p><strong>Altura: </strong>{item.height}</p>\n                            <p><strong>Cor do Cabelo: </strong>{item.hair_color}</p>\n                            <p><strong>Cor da Pele: </strong>{item.skin_color}</p>\n                            <p><strong>Cor dos Olhos: </strong>{item.eye_color}</p>\n                            <p><strong>Ano de Nascimento: </strong>{item.birth_year}</p>\n                            <p><strong>Genero: </strong>{item.gender}</p>\n                        </div>\n                    ))}\n                </div>\n\n\n                <div className='navegation'>\n                    {list.previous ? <button\n                        onClick={() => this.navegation(list.previous)}>Anterior</button> : null}\n                    {list.next ? <button\n                        onClick={() => this.navegation(list.next)}>Próximo</button> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default People","import React, { Component } from 'react'\n\nimport api from '../../../service/api'\n\nimport '../style.css'\n\nclass Film extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            from: undefined,\n            list: {\n                results: []\n            }\n        }\n    }\n\n    //codigo da internet\n    redirectView = (elem) => {\n        window.scroll({\n            top: document.querySelector(elem),\n            behavior: 'auto'// smooth - tem um animação\n        });\n    }\n\n    componentDidMount() {\n        this.findAplication()\n    }\n\n    findAplication = async () => {\n        const resp = await api.get('films/')\n        const list = resp.data\n        this.setState({ list })\n    }\n\n    navegation = async (url) => {\n        const resp = await api.get(`${url}`)\n        const list = resp.data\n        this.setState({ list })\n        this.redirectView('topo')\n    }\n\n    render() {\n        const { list } = this.state\n         \n        return (\n            <div>\n                <h3 className='sub-title'>Filmes</h3>\n                <div className='page-wrapper'>\n                    {list.results.sort((a, b) => a.episode_id > b.episode_id ? 1 : -1).map((item) => (\n                        <div key={item.url} className='page-wrapper-box'>\n                            <p><strong>Titulo: </strong>{item.title}</p>\n                            <p><strong>Data de Lançamento: </strong>{item.release_date}</p>\n                            <p><strong>Produtor: </strong>{item.producer}</p>\n                            <p><strong>Epsódio: </strong>{item.episode_id}</p>\n                            <p><strong>Diretor: </strong>{item.director}</p>\n                        </div>\n                    ))}\n                </div>\n\n\n                <div className='navegation'>\n                    {list.previous ? <button\n                        onClick={() => this.navegation(list.previous)}>Anterior</button> : null}\n                    {list.next ? <button\n                        onClick={() => this.navegation(list.next)}>Próximo</button> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Film","import React, { Component } from 'react'\n\nimport api from '../../../service/api'\n\nimport '../style.css'\n\nclass Planet extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            from: undefined,\n            list: {\n                results: []\n            }\n        }\n    }\n\n    //codigo da internet\n    redirectView = (elem) => {\n        window.scroll({\n            top: document.querySelector(elem),\n            behavior: 'auto'// smooth - tem um animação\n        });\n    }\n\n    componentDidMount() {\n        this.findAplication()\n    }\n\n    findAplication = async () => {\n        const resp = await api.get('planets/')\n        const list = resp.data\n        this.setState({ list })\n    }\n\n    navegation = async (url) => {\n        const resp = await api.get(`${url}`)\n        const list = resp.data\n        this.setState({ list })\n        this.redirectView('topo')\n    }\n\n    render() {\n        const { list } = this.state\n        \n        return (\n            <div>\n                <h3 className='sub-title'>Planetas</h3>\n                <div className='page-wrapper'>\n                    {list.results.map((item) => (\n                        <div key={item.url} className='page-wrapper-box'>\n                            <p><strong>Nome: </strong>{item.name}</p>\n                            <p><strong>Período de rotação: </strong>{item.rotation_period}</p>\n                            <p><strong>Período da órbita: </strong>{item.orbital_period}</p>\n                            <p><strong>Diâmetro: </strong>{item.diameter}</p>\n                            <p><strong>Clima: </strong>{item.climate}</p>\n                            <p><strong>Gravidade: </strong>{item.gravity}</p>\n                            <p><strong>Terreno: </strong>{item.terrain}</p>\n                            <p><strong>Água da superfice: </strong>{item.surface_water}</p>\n                            <p><strong>População: </strong>{item.population}</p>\n                        </div>\n                    ))}\n                </div>\n\n\n                <div className='navegation'>\n                    {list.previous ? <button\n                        onClick={() => this.navegation(list.previous)}>Anterior</button> : null}\n                    {list.next ? <button\n                        onClick={() => this.navegation(list.next)}>Próximo</button> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Planet","import React, { Component } from 'react'\n\nimport api from '../../../service/api'\n\nimport '../style.css'\n\nclass Species extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            from: undefined,\n            list: {\n                results: []\n            }\n        }\n    }\n\n    //codigo da internet\n    redirectView = (elem) => {\n        window.scroll({\n            top: document.querySelector(elem),\n            behavior: 'auto'// smooth - tem um animação\n        });\n    }\n\n    componentDidMount() {\n        this.findAplication()\n    }\n\n    findAplication = async () => {\n        const resp = await api.get('species/')\n        const list = resp.data\n        this.setState({ list })\n    }\n\n    navegation = async (url) => {\n        const resp = await api.get(`${url}`)\n        const list = resp.data\n        this.setState({ list })\n        this.redirectView('topo')\n    }\n\n    render() {\n        const { list } = this.state\n        \n        return (\n            <div>\n                <h3 className='sub-title'>Espécies</h3>\n                <div className='page-wrapper'>\n                    {list.results.map((item) => (\n                        <div key={item.url} className='page-wrapper-box'>\n                            <p><strong>Nome: </strong>{item.name}</p>\n                            <p><strong>Classificação: </strong>{item.classification}</p>\n                            <p><strong>Designinação: </strong>{item.designation}</p>\n                            <p><strong>Altura Média: </strong>{item.average_height}</p>\n                            <p><strong>Cor da Pele: </strong>{item.skin_colors}</p>\n                            <p><strong>Cor do Cabelo: </strong>{item.hair_colors}</p>\n                            <p><strong>Cor dos Olhos: </strong>{item.eye_colors}</p>\n                            <p><strong>Tempo Médio de Vida: </strong>{item.average_lifespan}</p>\n                            <p><strong>Linguagem: </strong>{item.language}</p>\n                        </div>\n                    ))}\n                </div>\n\n\n                <div className='navegation'>\n                    {list.previous ? <button\n                        onClick={() => this.navegation(list.previous)}>Anterior</button> : null}\n                    {list.next ? <button\n                        onClick={() => this.navegation(list.next)}>Próximo</button> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Species","import React, { Component } from 'react'\n\nimport api from '../../../service/api'\n\nimport '../style.css'\n\nclass Starships extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            from: undefined,\n            list: {\n                results: []\n            }\n        }\n    }\n\n    //codigo da internet\n    redirectView = (elem) => {\n        window.scroll({\n            top: document.querySelector(elem),\n            behavior: 'auto'// smooth - tem um animação\n        });\n    }\n\n    componentDidMount() {\n        this.findAplication()\n    }\n\n    findAplication = async () => {\n        const resp = await api.get('starships/')\n        const list = resp.data\n        this.setState({ list })\n    }\n\n    navegation = async (url) => {\n        const resp = await api.get(`${url}`)\n        const list = resp.data\n        this.setState({ list })\n        this.redirectView('topo')\n    }\n\n    render() {\n        const { list } = this.state\n        \n        return (\n            <div>\n                <h3 className='sub-title'>Naves Estrelares</h3>\n                <div className='page-wrapper'>\n                    {list.results.map((item) => (\n                        <div key={item.url} className='page-wrapper-box'>\n                            <p><strong>Nome: </strong>{item.name}</p>\n                            <p><strong>Modelo: </strong>{item.model}</p>\n                            <p><strong>Fabricante: </strong>{item.manufacturer}</p>\n                            <p><strong>Custo em Cŕedito: </strong>{item.cost_in_credits}</p>\n                            <p><strong>Comprimento: </strong>{item.length}</p>\n                            <p><strong>Velocidade Máxima: </strong>{item.max_atmosphering_speed}</p>\n                            <p><strong>Equipe Técnica: </strong>{item.crew}</p>\n                            <p><strong>Passageiros: </strong>{item.passengers}</p>\n                            <p><strong>Capacidade de Carga: </strong>{item.cargo_capacity}</p>\n                            <p><strong>Consumo: </strong>{item.consumables}</p>\n                            <p><strong>Classificação: </strong>{item.hyperdrive_rating}</p>\n                            <p><strong>MGLT: </strong>{item.MGLT}</p>\n                            <p><strong>Classe da Nave: </strong>{item.starship_class}</p>\n                        </div>\n                    ))}\n                </div>\n\n\n                <div className='navegation'>\n                    {list.previous ? <button\n                        onClick={() => this.navegation(list.previous)}>Anterior</button> : null}\n                    {list.next ? <button\n                        onClick={() => this.navegation(list.next)}>Próximo</button> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Starships","import React, { Component } from 'react'\n\nimport api from '../../../service/api'\n\nimport '../style.css'\n\nclass Vehicles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            from: undefined,\n            list: {\n                results: []\n            }\n        }\n    }\n\n    //codigo da internet\n    redirectView = (elem) => {\n        window.scroll({\n            top: document.querySelector(elem),\n            behavior: 'auto'// smooth - tem um animação\n        });\n    }\n\n    componentDidMount() {\n        this.findAplication()\n    }\n\n    findAplication = async () => {\n        const resp = await api.get('vehicles/')\n        const list = resp.data\n        this.setState({ list })\n    }\n\n    navegation = async (url) => {\n        const resp = await api.get(`${url}`)\n        const list = resp.data\n        this.setState({ list })\n        this.redirectView('topo')\n    }\n\n    render() {\n        const { list } = this.state\n        \n        return (\n            <div>\n                <h3 className='sub-title'>Veículos</h3>\n                <div className='page-wrapper'>\n                    {list.results.map((item) => (\n                        <div key={item.url} className='page-wrapper-box'>\n                            <p><strong>Nome: </strong>{item.name}</p>\n                            <p><strong>Modelo: </strong>{item.model}</p>\n                            <p><strong>Fabricante: </strong>{item.manufacturer}</p>\n                            <p><strong>Custo em Cŕedito: </strong>{item.cost_in_credits}</p>\n                            <p><strong>Comprimento: </strong>{item.length}</p>\n                            <p><strong>Velocidade Máxima: </strong>{item.max_atmosphering_speed}</p>\n                            <p><strong>Equipe Técnica: </strong>{item.crew}</p>\n                            <p><strong>Passageiros: </strong>{item.passengers}</p>\n                            <p><strong>Capacidade de Carga: </strong>{item.cargo_capacity}</p>\n                            <p><strong>Consumo: </strong>{item.consumables}</p>\n                            <p><strong>Classe da Nave: </strong>{item.vehicle_class}</p>\n                        </div>\n                    ))}\n                </div>\n\n\n                <div className='navegation'>\n                    {list.previous ? <button\n                        onClick={() => this.navegation(list.previous)}>Anterior</button> : null}\n                    {list.next ? <button\n                        onClick={() => this.navegation(list.next)}>Próximo</button> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Vehicles","import React from 'react'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/header'\nimport Footer from './components/footer'\n\nimport Main from './components/main'\n\nimport People from './components/page/people'\nimport Film from './components/page/film'\n\nimport Planet from './components/page/planet'\nimport Species from './components/page/species'\nimport Starships from './components/page/startships'\nimport Vehicles from './components/page/vehicles'\n\nexport default props => (\n    <Router>\n        <Header title='Bem vindo ao SWAPI - Star Wars API'\n            subtitle='Desbrave esse universo em um click!!!'/>\n\n        <Route exact path='/SWAPI-Frontend' component={ Main } />\n        <Route path='/SWAPI-Frontend/personagens' component={ People } />\n        <Route path='/SWAPI-Frontend/filmes' component={ Film } />\n\n        <Route path='/SWAPI-Frontend/planetas' component={ Planet } />\n        <Route path='/SWAPI-Frontend/especies' component={ Species } />\n        <Route path='/SWAPI-Frontend/naves' component={ Starships } />\n        <Route path='/SWAPI-Frontend/veiculos' component={ Vehicles } />\n\n        <Footer />\n    </Router>\n)\n","import React from 'react'\n\nimport Routes from './routes'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}